// aes4js, by dandavis. MIT applies.
(function(root,factory){typeof define=="function"&&define.amd?define([],factory):typeof exports=="object"?module.exports=factory():root.aes4js=factory()})(this,function(){function aesEnc(key,str){var iv=window.crypto.getRandomValues(new Uint8Array(12)),encoder=new TextEncoder("utf-8"),encodedString=encoder.encode(str),bin=!1;return typeof str=="object"&&(encodedString=str,bin=!0),derive(key).then(function(key){return window.crypto.subtle.encrypt({name:"AES-GCM",iv:iv,tagLength:128},key,encodedString).then(function(encrypted){return window.crypto.subtle.exportKey("jwk",key).then(function(c){return new Promise(function(resolve,reject){var fr=new FileReader;fr.onload=function(){resolve({encrypted:fr.result,iv:[].slice.call(iv),bin:bin})},fr.onerror=reject,fr.readAsDataURL(new Blob([encrypted]))})})})}).catch(console.error)}function aesDec(key,obj){return typeof obj=="string"&&(obj=JSON.parse(obj)),derive(key).then(function(key){return(new Promise(function(resolve,reject){var blob=dataUrlToBlob(obj.encrypted),fr=new FileReader;fr.onload=function(){window.crypto.subtle.decrypt({name:"AES-GCM",iv:new Uint8Array(obj.iv),tagLength:128},key,fr.result).then(function(x){return obj.bin?x:(new TextDecoder("utf-8")).decode(x)}).then(resolve).catch(function(y){String(y)==="OperationError"&&(y="Opps!\r\n\r\nWrong Password, try again."),reject(y)})},fr.readAsArrayBuffer(blob)})).catch(function(e){throw e})})}function sha256(str){return crypto.subtle.digest("SHA-256",(new TextEncoder("utf-8")).encode(str)).then(function(x){return Array.from(new Uint8Array(x)).map(function(b){return("00"+b.toString(16)).slice(-2)}).join("")})}function derive(plainText){return typeof plainText=="object"&&plainText.constructor===CryptoKey?new Promise(function(resolve,reject){return resolve(plainText)}):(plainText.length<10&&(plainText=plainText.repeat(12-plainText.length)),sha256("349d"+plainText+"9d3458694307"+plainText.length).then(function(salt){var passphraseKey=(new TextEncoder).encode(plainText),saltBuffer=(new TextEncoder).encode(salt);return window.crypto.subtle.importKey("raw",passphraseKey,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]).then(function(key){return window.crypto.subtle.deriveKey({name:"PBKDF2",salt:saltBuffer,iterations:1e6+plainText.length,hash:"SHA-256"},key,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])})}))}function dataUrlToBlob(strUrl){var parts=strUrl.split(/[:;,]/),type=parts[1],decoder=parts[2]=="base64"?atob:decodeURIComponent,binData=decoder(parts.pop()),mx=binData.length,i=0,uiArr=new Uint8Array(mx);for(i;i<mx;++i)uiArr[i]=binData.charCodeAt(i);return new Blob([uiArr],{type:type})}return{encrypt:aesEnc,decrypt:aesDec,derive:derive}});
